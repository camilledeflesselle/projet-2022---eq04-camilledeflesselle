{
	"info": {
		"_postman_id": "93bdf536-9bdd-43b9-aef5-0d947f00e413",
		"name": "Cafe-Postman-Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15492261"
	},
	"item": [
		{
			"name": "S1 Cube",
			"item": [
				{
					"name": "Empty Layout",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "layout empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be valid layout empty test\", function () {\r",
											"    let jsonValid = {\r",
											"            \"name\": \"Les 4-FÃ©es\",\r",
											"            \"cubes\": [\r",
											"            {\r",
											"                \"name\": \"Bloom\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 1,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 2,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 3,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 4,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Merryweather\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 5,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 6,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 7,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 8,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Tinker Bell\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 9,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 10,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 11,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 12,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Wanda\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 13,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 14,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 15,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 16,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"            ]\r",
											"        }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/layout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"layout"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "S2 Client",
			"item": [
				{
					"name": "Customer not found",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "show customer info",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Response invalid customer id\", function () {\r",
											"    let jsonValid = {\r",
											"        \"error\": \"INVALID_CUSTOMER_ID\",\r",
											"        \"description\": \"The customer does not exist.\"\r",
											"    } \r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid);\r",
											"    pm.expect(isEqual).to.be.true;\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/customers/abd4bced-4fce-44a0-aa41-c41c5777e679",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"abd4bced-4fce-44a0-aa41-c41c5777e679"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Show customer info",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "basic check-in",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"abd4bced-4fce-44a0-aa41-c41c5777e679\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"abd4bced-4fce-44a0-aa41-c41c5777e679\",\r\n    \"customer_name\": \"Keanu Reeves\",\r\n    \"group_name\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "show customer info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be valid with name and seat number\", function () {\r",
											"    let jsonValid = {\r",
											"        \"name\": \"Keanu Reeves\",\r",
											"        \"seat_number\": 1,\r",
											"        \"group_name\": null\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid);\r",
											"    pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/customers/abd4bced-4fce-44a0-aa41-c41c5777e679",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"abd4bced-4fce-44a0-aa41-c41c5777e679"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "No more seats available",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "16 check in",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"const nbCustomerAdded = parseInt(pm.collectionVariables.get(\"nbCustomerAdded\"));\r",
											"\r",
											"if(nbCustomerAdded < 16){\r",
											"    console.log(\"continue\");\r",
											"    postman.setNextRequest(\"16 check in\");\r",
											"} else {\r",
											"    // we reset the counter\r",
											"    pm.collectionVariables.set(\"nbCustomerAdded\", 0);\r",
											"    postman.setNextRequest(\"no seats available check-in\");\r",
											"}\r",
											"\r",
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"id_\" + nbCustomerAdded;\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"let nbCustomerAdded = parseInt(pm.collectionVariables.get(\"nbCustomerAdded\"));\r",
											"\r",
											"nbCustomerAdded = nbCustomerAdded + 1;\r",
											"\r",
											"pm.collectionVariables.set(\"nbCustomerAdded\", nbCustomerAdded);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_{{nbCustomerAdded}}\",\r\n    \"customer_name\": \"name_1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "no seats available check-in",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Bad request insufficient seats test\", function () {\r",
											"    let jsonValid = {\r",
											"        \"error\": \"INSUFFICIENT_SEATS\",\r",
											"        \"description\": \"There are currently no available seats. Please come back later.\"\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_17\",\r\n    \"customer_name\": \"name_17\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "layout with all customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be valid with 16 customers test\", function () {\r",
											"    let jsonValid = {\r",
											"        \"name\": \"Les 4-FÃ©es\",\r",
											"        \"cubes\": [{\r",
											"            \"name\": \"Bloom\",\r",
											"            \"seats\": [{\r",
											"                \"number\": 1,\r",
											"                \"status\": \"Occupied\",\r",
											"                \"customer_id\": \"id_1\",\r",
											"                \"group_name\": null\r",
											"            }, {\r",
											"                \"number\": 2,\r",
											"                \"status\": \"Occupied\",\r",
											"                \"customer_id\": \"id_2\",\r",
											"                \"group_name\": null\r",
											"            }, {\r",
											"                \"number\": 3,\r",
											"                \"status\": \"Occupied\",\r",
											"                \"customer_id\": \"id_3\",\r",
											"                \"group_name\": null\r",
											"            }, {\r",
											"                \"number\": 4,\r",
											"                \"status\": \"Occupied\",\r",
											"                \"customer_id\": \"id_4\",\r",
											"                \"group_name\": null\r",
											"            }]\r",
											"        }, {\r",
											"            \"name\": \"Merryweather\",\r",
											"            \"seats\": [{\r",
											"                \"number\": 5,\r",
											"                \"status\": \"Occupied\",\r",
											"                \"customer_id\": \"id_5\",\r",
											"                \"group_name\": null\r",
											"            }, {\r",
											"                \"number\": 6,\r",
											"                \"status\": \"Occupied\",\r",
											"                \"customer_id\": \"id_6\",\r",
											"                \"group_name\": null\r",
											"            }, {\r",
											"                \"number\": 7,\r",
											"                \"status\": \"Occupied\",\r",
											"                \"customer_id\": \"id_7\",\r",
											"                \"group_name\": null\r",
											"            }, {\r",
											"                \"number\": 8,\r",
											"                \"status\": \"Occupied\",\r",
											"                \"customer_id\": \"id_8\",\r",
											"                \"group_name\": null\r",
											"            }]\r",
											"        }, {\r",
											"            \"name\": \"Tinker Bell\",\r",
											"            \"seats\": [{\r",
											"                \"number\": 9,\r",
											"                \"status\": \"Occupied\",\r",
											"                \"customer_id\": \"id_9\",\r",
											"                \"group_name\": null\r",
											"            }, {\r",
											"                \"number\": 10,\r",
											"                \"status\": \"Occupied\",\r",
											"                \"customer_id\": \"id_10\",\r",
											"                \"group_name\": null\r",
											"            }, {\r",
											"                \"number\": 11,\r",
											"                \"status\": \"Occupied\",\r",
											"                \"customer_id\": \"id_11\",\r",
											"                \"group_name\": null\r",
											"            }, {\r",
											"                \"number\": 12,\r",
											"                \"status\": \"Occupied\",\r",
											"                \"customer_id\": \"id_12\",\r",
											"                \"group_name\": null\r",
											"            }]\r",
											"        }, {\r",
											"            \"name\": \"Wanda\",\r",
											"            \"seats\": [{\r",
											"                \"number\": 13,\r",
											"                \"status\": \"Occupied\",\r",
											"                \"customer_id\": \"id_13\",\r",
											"                \"group_name\": null\r",
											"            }, {\r",
											"                \"number\": 14,\r",
											"                \"status\": \"Occupied\",\r",
											"                \"customer_id\": \"id_14\",\r",
											"                \"group_name\": null\r",
											"            }, {\r",
											"                \"number\": 15,\r",
											"                \"status\": \"Occupied\",\r",
											"                \"customer_id\": \"id_15\",\r",
											"                \"group_name\": null\r",
											"            }, {\r",
											"                \"number\": 16,\r",
											"                \"status\": \"Occupied\",\r",
											"                \"customer_id\": \"id_16\",\r",
											"                \"group_name\": null\r",
											"            }]\r",
											"        }]\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/layout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"layout"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Already visited",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "basic check-in",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "duplicate customer check in",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Bad request response test\", function () {\r",
											"    let jsonValid = {\r",
											"        \"error\": \"DUPLICATE_CUSTOMER_ID\",\r",
											"        \"description\": \"The customer cannot visit the cafÃ© multiple times in the same day.\"\r",
											"    } \r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "layout with 1 customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be valid test\", function () {\r",
											"    let jsonValid = {\r",
											"        \"name\": \"Les 4-FÃ©es\",\r",
											"        \"cubes\": [\r",
											"            {\r",
											"                \"name\": \"Bloom\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 1,\r",
											"                        \"status\": \"Occupied\",\r",
											"                        \"customer_id\": \"id_1\",\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 2,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 3,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 4,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Merryweather\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 5,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 6,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 7,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 8,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Tinker Bell\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 9,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 10,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 11,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 12,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Wanda\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 13,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 14,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 15,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 16,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        ]\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/layout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"layout"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Basic Check In",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "basic check-in",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "layout with 1 customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be valid test\", function () {\r",
											"    let jsonValid = {\r",
											"        \"name\": \"Les 4-FÃ©es\",\r",
											"        \"cubes\": [\r",
											"            {\r",
											"                \"name\": \"Bloom\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 1,\r",
											"                        \"status\": \"Occupied\",\r",
											"                        \"customer_id\": \"id_1\",\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 2,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 3,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 4,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Merryweather\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 5,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 6,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 7,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 8,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Tinker Bell\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 9,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 10,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 11,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 12,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Wanda\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 13,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 14,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 15,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 16,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        ]\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/layout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"layout"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "S3 Group",
			"item": [
				{
					"name": "No group seats",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "Group reservation",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"group_name\": \"Bulletproof Boy Scouts\",\n  \"group_size\": 2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/reservations",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"reservations"
									]
								}
							},
							"response": []
						},
						{
							"name": "basic group check-in 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\",\r\n    \"group_name\": \"Bulletproof Boy Scouts\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "basic group check-in 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"id_2\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_2\",\r\n    \"customer_name\": \"name_2\",\r\n    \"group_name\": \"Bulletproof Boy Scouts\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "no group seats check-in",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"No group seats\", function () {\r",
											"    let jsonValid = {\r",
											"        \"error\": \"NO_GROUP_SEATS\",\r",
											"        \"description\": \"There are no more seats reserved for that group.\"\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid);\r",
											"    pm.expect(isEqual).to.be.true;\r",
											"});\r",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_3\",\r\n    \"customer_name\": \"name_3\",\r\n    \"group_name\": \"Bulletproof Boy Scouts\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "No reservation found",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "basic check-in",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Duplicate group reservation\", function () {\r",
											"    let jsonValid = {\r",
											"        \"error\": \"NO_RESERVATIONS_FOUND\",\r",
											"        \"description\": \"No reservations were made today for that group.\"\r",
											"    } \r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid);\r",
											"    pm.expect(isEqual).to.be.true;\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\",\r\n    \"group_name\": \"Math-Tricks\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Insufficient seats",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "15 check in",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"const nbCustomerAdded = parseInt(pm.collectionVariables.get(\"nbCustomerAdded\"));\r",
											"\r",
											"if(nbCustomerAdded < 15){\r",
											"    console.log(\"continue\");\r",
											"    postman.setNextRequest(\"15 check in\");\r",
											"} else {\r",
											"    // we reset the counter\r",
											"    pm.collectionVariables.set(\"nbCustomerAdded\", 0);\r",
											"    postman.setNextRequest(\"insufficient seats reservation\");\r",
											"}\r",
											"\r",
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"id_\" + nbCustomerAdded;\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"let nbCustomerAdded = parseInt(pm.collectionVariables.get(\"nbCustomerAdded\"));\r",
											"\r",
											"nbCustomerAdded = nbCustomerAdded + 1;\r",
											"\r",
											"pm.collectionVariables.set(\"nbCustomerAdded\", nbCustomerAdded);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_{{nbCustomerAdded}}\",\r\n    \"customer_name\": \"name_1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "insufficient seats reservation",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Bad request insufficient seats test\", function () {\r",
											"    let jsonValid = {\r",
											"        \"error\": \"INSUFFICIENT_SEATS\",\r",
											"        \"description\": \"There are currently no available seats. Please come back later.\"\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"group_name\": \"Bulletproof Boy Scouts\",\r\n    \"group_size\": 2\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/reservations",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"reservations"
									]
								}
							},
							"response": []
						},
						{
							"name": "layout",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/layout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"layout"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Duplicate group name",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "Group reservation 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"group_name\": \"Bulletproof Boy Scouts\",\n  \"group_size\": 4\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/reservations",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"reservations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Group reservation 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Duplicate group reservation\", function () {\r",
											"    let jsonValid = {\r",
											"        \"error\": \"DUPLICATE_GROUP_NAME\",\r",
											"        \"description\": \"The specified group already made a reservation today.\"\r",
											"    } \r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid);\r",
											"    pm.expect(isEqual).to.be.true;\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"group_name\": \"Bulletproof Boy Scouts\",\n  \"group_size\": 4\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/reservations",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"reservations"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Invalid group size",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "Group reservation",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Invalid group size\", function () {\r",
											"    let jsonValid = {\r",
											"        \"error\": \"INVALID_GROUP_SIZE\",\r",
											"        \"description\": \"Groups must reserve at least two seats.\"\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid);\r",
											"    pm.expect(isEqual).to.be.true;\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"group_name\": \"Bulletproof Boy Scouts\",\n  \"group_size\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/reservations",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"reservations"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Basic Reservation with check in",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "Group reservation",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"group_name\": \"Bulletproof Boy Scouts\",\n  \"group_size\": 4\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/reservations",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"reservations"
									]
								}
							},
							"response": []
						},
						{
							"name": "basic check-in",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\",\r\n    \"group_name\": \"Bulletproof Boy Scouts\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "layout with 1 customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be valid test\", function () {\r",
											"    let jsonValid = {\r",
											"        \"name\": \"Les 4-FÃ©es\",\r",
											"        \"cubes\": [\r",
											"            {\r",
											"                \"name\": \"Bloom\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 1,\r",
											"                        \"status\": \"Occupied\",\r",
											"                        \"customer_id\": \"id_1\",\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 2,\r",
											"                        \"status\": \"Reserved\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 3,\r",
											"                        \"status\": \"Reserved\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 4,\r",
											"                        \"status\": \"Reserved\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Merryweather\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 5,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 6,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 7,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 8,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Tinker Bell\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 9,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 10,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 11,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 12,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Wanda\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 13,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 14,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 15,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 16,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        ]\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/layout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"layout"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Basic Reservation",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "Group reservation 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"group_name\": \"Bulletproof Boy Scouts\",\n  \"group_size\": 4\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/reservations",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"reservations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Group reservation 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"group_name\": \"Love Birds\",\n  \"group_size\": 2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/reservations",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"reservations"
									]
								}
							},
							"response": []
						},
						{
							"name": "show reservations info",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be valid with group name and size\", function () {\r",
											"    let jsonValid = [\r",
											"  {\r",
											"    \"group_name\": \"Bulletproof Boy Scouts\",\r",
											"    \"group_size\": 4\r",
											"  },\r",
											"  {\r",
											"    \"group_name\": \"Love Birds\",\r",
											"    \"group_size\": 2\r",
											"  }\r",
											"] \r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid);\r",
											"    pm.expect(isEqual).to.be.true;\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/reservations",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"reservations"
									]
								}
							},
							"response": []
						},
						{
							"name": "layout with 2 reservations",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be valid test\", function () {\r",
											"    let jsonValid = {\r",
											"        \"name\": \"Les 4-FÃ©es\",\r",
											"        \"cubes\": [\r",
											"            {\r",
											"                \"name\": \"Bloom\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 1,\r",
											"                        \"status\": \"Reserved\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 2,\r",
											"                        \"status\": \"Reserved\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 3,\r",
											"                        \"status\": \"Reserved\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 4,\r",
											"                        \"status\": \"Reserved\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Merryweather\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 5,\r",
											"                        \"status\": \"Reserved\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": \"Love Birds\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 6,\r",
											"                        \"status\": \"Reserved\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": \"Love Birds\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 7,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 8,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Tinker Bell\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 9,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 10,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 11,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 12,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Wanda\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 13,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 14,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 15,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 16,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        ]\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/layout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"layout"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "S4 Config",
			"item": [
				{
					"name": "Test of group reservation method",
					"item": [
						{
							"name": "Config Default",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"None\",\r\n  \"province\": \"\",\r\n  \"state\": \"\",\r\n  \"group_tip_rate\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/config",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"config"
									]
								}
							},
							"response": []
						},
						{
							"name": "Config Full Cubes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"group_reservation_method\": \"Full Cubes\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"None\",\r\n  \"province\": \"\",\r\n  \"state\": \"\",\r\n  \"group_tip_rate\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/config",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"config"
									]
								}
							},
							"response": []
						},
						{
							"name": "Config No Loners",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"group_reservation_method\": \"No Loners\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"None\",\r\n  \"province\": \"\",\r\n  \"state\": \"\",\r\n  \"group_tip_rate\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/config",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"config"
									]
								}
							},
							"response": []
						},
						{
							"name": "Config Other Options Ignored",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"Option To Be IGNORED\": \"VALUE TO BE IGNORE\",\r\n  \"country\": \"None\",\r\n  \"province\": \"\",\r\n  \"state\": \"\",\r\n  \"group_tip_rate\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/config",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"config"
									]
								}
							},
							"response": []
						},
						{
							"name": "Config Invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Invalid Group Reservation Method size\", function () {\r",
											"    let jsonValid = {\r",
											"        \"error\": \"INVALID_GROUP_RESERVATION_METHOD\",\r",
											"        \"description\": \"The group reservation method is not supported.\"\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid);\r",
											"    pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"group_reservation_method\": \"Invalid Group Reservation Method\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"\",\r\n  \"province\": \"\",\r\n  \"state\": \"\",\r\n  \"group_tip_rate\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/config",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"config"
									]
								}
							},
							"response": []
						},
						{
							"name": "Restore Default Config",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"None\",\r\n  \"province\": \"\",\r\n  \"state\": \"\",\r\n  \"group_tip_rate\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/config",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"config"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Surprise Size",
			"item": [
				{
					"name": "Size",
					"item": [
						{
							"name": "1 Seat Per Cube Test",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 1,\r\n  \"country\": \"None\",\r\n  \"province\": \"\",\r\n  \"state\": \"\",\r\n  \"group_tip_rate\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/config",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"config"
									]
								}
							},
							"response": []
						},
						{
							"name": "1 Seat Layout",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to have valid layout with 1 seat per Cube\", function () {\r",
											"    let jsonValid = {\r",
											"        \"name\": \"Les 4-FÃ©es\",\r",
											"        \"cubes\": [\r",
											"            {\r",
											"                \"name\": \"Bloom\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 1,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Merryweather\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 2,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Tinker Bell\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 3,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Wanda\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 4,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        ]\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/layout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"layout"
									]
								}
							},
							"response": []
						},
						{
							"name": "Restore Default Config",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"None\",\r\n  \"province\": \"\",\r\n  \"state\": \"\",\r\n  \"group_tip_rate\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/config",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"config"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "S5 Cafe",
			"item": [
				{
					"name": "Basic Order Valid",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "Inventory Full Load",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Chocolate\": 100000,\r\n  \"Espresso\": 100000,\r\n  \"Milk\": 100000,\r\n  \"Water\": 100000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/inventory",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"inventory"
									]
								}
							},
							"response": []
						},
						{
							"name": "basic check-in",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order Valid Customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"orders\": [\"Latte\", \"Mocha\", \"Espresso\", \"Latte\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/customers/id_1/orders",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be the same order provided\", function () {\r",
											"    let jsonValid = {\r",
											"        \"orders\": [\"Latte\", \"Mocha\", \"Espresso\", \"Latte\"]\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/customers/id_1/orders",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"orders"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Multiple Order for customer",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "Inventory Full Load",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Chocolate\": 100000,\r\n  \"Espresso\": 100000,\r\n  \"Milk\": 100000,\r\n  \"Water\": 100000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/inventory",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"inventory"
									]
								}
							},
							"response": []
						},
						{
							"name": "basic check-in",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order Valid number 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"orders\": [\"Latte\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/customers/id_1/orders",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Order 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be the same order provided\", function () {\r",
											"    let jsonValid = {\r",
											"        \"orders\": [\"Latte\"]\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/customers/id_1/orders",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order Valid number 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"orders\": [\"Mocha\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/customers/id_1/orders",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Order 1 and 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be the same order provided\", function () {\r",
											"    let jsonValid = {\r",
											"        \"orders\": [\"Latte\", \"Mocha\"]\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/customers/id_1/orders",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"orders"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Invalid Food Name",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "basic check-in",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid food Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be INVALID_MENU_ORDER\", function () {\r",
											"    let jsonValid = {\r",
											"        \"error\": \"INVALID_MENU_ORDER\",\r",
											"        \"description\": \"An item ordered is not on the menu.\"\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"orders\": [\"Invalid Food Name\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/customers/id_1/orders",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Empty order list for customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be INVALID_MENU_ORDER\", function () {\r",
											"    let jsonValid = {\r",
											"        \"orders\": []\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/customers/id_1/orders",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"orders"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Invalid food name with also valid names",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "basic check-in Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "One invalid with valid food name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be INVALID_MENU_ORDER\", function () {\r",
											"    let jsonValid = {\r",
											"        \"error\": \"INVALID_MENU_ORDER\",\r",
											"        \"description\": \"An item ordered is not on the menu.\"\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"orders\": [\"Americano\",\"Invalid food name\",\"Dark Roast\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/customers/id_1/orders",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Empty order list for customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be INVALID_MENU_ORDER\", function () {\r",
											"    let jsonValid = {\r",
											"        \"orders\": []\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/customers/id_1/orders",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"orders"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Client dose not exist",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid Customer Id for getorders",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response to be INVALID_CUSTOMER_ID\", function () {\r",
											"    let jsonValid = {\r",
											"        \"error\": \"INVALID_CUSTOMER_ID\",\r",
											"        \"description\": \"The customer does not exist.\"\r",
											"    } \r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/customers/id_1/orders",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid Customer Id for put orders",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response to be INVALID_CUSTOMER_ID\", function () {\r",
											"    let jsonValid = {\r",
											"        \"error\": \"INVALID_CUSTOMER_ID\",\r",
											"        \"description\": \"The customer does not exist.\"\r",
											"    } \r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"orders\": [\"Latte\", \"Mocha\", \"Espresso\", \"Latte\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/customers/id_1/orders",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"orders"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Order Clear when Cafe Close",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "Inventory Full Load",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Chocolate\": 100000,\r\n  \"Espresso\": 100000,\r\n  \"Milk\": 100000,\r\n  \"Water\": 100000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/inventory",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"inventory"
									]
								}
							},
							"response": []
						},
						{
							"name": "basic check-in",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order Valid Customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"orders\": [\"Latte\", \"Mocha\", \"Espresso\", \"Latte\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/customers/id_1/orders",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be the same order provided\", function () {\r",
											"    let jsonValid = {\r",
											"        \"orders\": [\"Latte\", \"Mocha\", \"Espresso\", \"Latte\"]\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/customers/id_1/orders",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid Customer Id for getorders Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response to be INVALID_CUSTOMER_ID\", function () {\r",
											"    let jsonValid = {\r",
											"        \"error\": \"INVALID_CUSTOMER_ID\",\r",
											"        \"description\": \"The customer does not exist.\"\r",
											"    } \r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/customers/id_1/orders",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "basic check-in",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be the same order provided\", function () {\r",
											"    let jsonValid = {\r",
											"        \"orders\": []\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/customers/id_1/orders",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"orders"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "S6 Fact",
			"item": [
				{
					"name": "Basic Empty Bill Checkout",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "basic check-in",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "layout with 1 customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be valid test\", function () {\r",
											"    let jsonValid = {\r",
											"        \"name\": \"Les 4-FÃ©es\",\r",
											"        \"cubes\": [\r",
											"            {\r",
											"                \"name\": \"Bloom\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 1,\r",
											"                        \"status\": \"Occupied\",\r",
											"                        \"customer_id\": \"id_1\",\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 2,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 3,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 4,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Merryweather\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 5,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 6,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 7,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 8,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Tinker Bell\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 9,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 10,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 11,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 12,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Wanda\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 13,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 14,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 15,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 16,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        ]\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/layout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"layout"
									]
								}
							},
							"response": []
						},
						{
							"name": "Checkout",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response to return location of the bill\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id+ \"/bill\");\r",
											"    pm.expect(test).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"customer_id\": \"id_1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/checkout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"checkout"
									]
								}
							},
							"response": []
						},
						{
							"name": "layout empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be valid layout empty test\", function () {\r",
											"    let jsonValid = {\r",
											"            \"name\": \"Les 4-FÃ©es\",\r",
											"            \"cubes\": [\r",
											"            {\r",
											"                \"name\": \"Bloom\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 1,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 2,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 3,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 4,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Merryweather\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 5,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 6,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 7,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 8,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Tinker Bell\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 9,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 10,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 11,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 12,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Wanda\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 13,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 14,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 15,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 16,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"            ]\r",
											"        }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/layout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"layout"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get empty Bill",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be an empty bill with 0 total\", function () {\r",
											"        let jsonValid = {\r",
											"        \"orders\": [],\r",
											"        \"subtotal\": 0,\r",
											"        \"taxes\": 0,\r",
											"        \"tip\": 0,\r",
											"        \"total\": 0\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/customers/id_1/bill",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"bill"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Basic Checkout",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "Inventory Full Load",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Chocolate\": 100000,\r\n  \"Espresso\": 100000,\r\n  \"Milk\": 100000,\r\n  \"Water\": 100000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/inventory",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"inventory"
									]
								}
							},
							"response": []
						},
						{
							"name": "basic check-in",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "layout with 1 customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be valid test\", function () {\r",
											"    let jsonValid = {\r",
											"        \"name\": \"Les 4-FÃ©es\",\r",
											"        \"cubes\": [\r",
											"            {\r",
											"                \"name\": \"Bloom\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 1,\r",
											"                        \"status\": \"Occupied\",\r",
											"                        \"customer_id\": \"id_1\",\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 2,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 3,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 4,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Merryweather\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 5,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 6,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 7,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 8,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Tinker Bell\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 9,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 10,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 11,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 12,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Wanda\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 13,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 14,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 15,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 16,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        ]\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/layout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"layout"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order Valid Customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"orders\": [\"Latte\", \"Mocha\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/customers/id_1/orders",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Checkout",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response to return location of the bill\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id+ \"/bill\");\r",
											"    pm.expect(test).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"customer_id\": \"id_1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/checkout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"checkout"
									]
								}
							},
							"response": []
						},
						{
							"name": "layout empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be valid layout empty test\", function () {\r",
											"    let jsonValid = {\r",
											"            \"name\": \"Les 4-FÃ©es\",\r",
											"            \"cubes\": [\r",
											"            {\r",
											"                \"name\": \"Bloom\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 1,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 2,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 3,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 4,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Merryweather\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 5,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 6,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 7,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 8,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Tinker Bell\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 9,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 10,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 11,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 12,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Wanda\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 13,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 14,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 15,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 16,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"            ]\r",
											"        }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/layout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"layout"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Bill",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be the coresponding bill\", function () {\r",
											"        let jsonValid = {\r",
											"        \"orders\": [\"Latte\", \"Mocha\"],\r",
											"        \"subtotal\": 7.1,\r",
											"        \"taxes\": 0,\r",
											"        \"tip\": 0,\r",
											"        \"total\": 7.1\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    console.log(responseJson)\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/customers/id_1/bill",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"bill"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Bill Calculation",
					"item": [
						{
							"name": "Checkout US AL Tax and QC province",
							"item": [
								{
									"name": "close",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "http://localhost:8181/close",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"close"
											]
										}
									},
									"response": []
								},
								{
									"name": "Valid Country US",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"US\",\r\n  \"province\": \"QC\",\r\n  \"state\": \"AL\",\r\n  \"group_tip_rate\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/config",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Inventory Full Load",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Chocolate\": 100000,\r\n  \"Espresso\": 100000,\r\n  \"Milk\": 100000,\r\n  \"Water\": 100000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/inventory",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"inventory"
											]
										}
									},
									"response": []
								},
								{
									"name": "basic check-in",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Header response test\", function () {\r",
													"    customer_id = \"id_1\";\r",
													"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
													"    pm.expect(test).to.be.true;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/check-in",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"check-in"
											]
										}
									},
									"response": []
								},
								{
									"name": "layout with 1 customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response to be valid test\", function () {\r",
													"    let jsonValid = {\r",
													"        \"name\": \"Les 4-FÃ©es\",\r",
													"        \"cubes\": [\r",
													"            {\r",
													"                \"name\": \"Bloom\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 1,\r",
													"                        \"status\": \"Occupied\",\r",
													"                        \"customer_id\": \"id_1\",\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 2,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 3,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 4,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Merryweather\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 5,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 6,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 7,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 8,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Tinker Bell\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 9,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 10,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 11,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 12,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Wanda\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 13,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 14,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 15,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 16,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            }\r",
													"        ]\r",
													"    }\r",
													"    const responseJson = pm.response.json();\r",
													"    const isEqual = _.isEqual(responseJson,jsonValid\r",
													"     );\r",
													"     pm.expect(isEqual).to.be.true;\r",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8181/layout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"layout"
											]
										}
									},
									"response": []
								},
								{
									"name": "Order Valid Customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"orders\": [\"Americano\", \"Dark Roast\", \"Latte\"]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/customers/id_1/orders",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"customers",
												"id_1",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "Checkout",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Header response to return location of the bill\", function () {\r",
													"    customer_id = \"id_1\";\r",
													"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id+ \"/bill\");\r",
													"    pm.expect(test).to.be.true;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"customer_id\": \"id_1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/checkout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"checkout"
											]
										}
									},
									"response": []
								},
								{
									"name": "layout empty",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response to be valid layout empty test\", function () {\r",
													"    let jsonValid = {\r",
													"            \"name\": \"Les 4-FÃ©es\",\r",
													"            \"cubes\": [\r",
													"            {\r",
													"                \"name\": \"Bloom\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 1,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 2,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 3,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 4,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Merryweather\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 5,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 6,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 7,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 8,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Tinker Bell\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 9,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 10,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 11,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 12,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Wanda\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 13,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 14,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 15,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 16,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            }\r",
													"            ]\r",
													"        }\r",
													"    const responseJson = pm.response.json();\r",
													"    const isEqual = _.isEqual(responseJson,jsonValid\r",
													"     );\r",
													"     pm.expect(isEqual).to.be.true;\r",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8181/layout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"layout"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Bill",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"function auCentiemeSuperieur(nombre){\r",
													"    return Math.ceil(100*nombre)/100\r",
													"}\r",
													"\r",
													"pm.test(\"Response to be the coresponding bill\", function () {\r",
													"    // Americano\t2.25$  / Dark Roast\t2.10$ / Latte : 2.95$\r",
													"    // taxe 4% alberta us\r",
													"    let subtotal = 2.25 + 2.10 + 2.95\r",
													"    let taxe_percentage = 4 / 100\r",
													"    let taxes = (subtotal * taxe_percentage)\r",
													"    let tip_percentage = 0\r",
													"    let tip = (subtotal) * tip_percentage\r",
													"    let total = subtotal + taxes + tip\r",
													"\r",
													"    let jsonValid = {\r",
													"        \"orders\": [\"Americano\", \"Dark Roast\", \"Latte\"],\r",
													"        \"subtotal\": subtotal,\r",
													"        \"taxes\": auCentiemeSuperieur(taxes) ,\r",
													"        \"tip\": auCentiemeSuperieur(tip),\r",
													"        \"total\": auCentiemeSuperieur(total)\r",
													"    }\r",
													"    const responseJson = pm.response.json();\r",
													"    const isEqual = _.isEqual(responseJson,jsonValid\r",
													"     );\r",
													"     pm.expect(isEqual).to.be.true;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8181/customers/id_1/bill",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"customers",
												"id_1",
												"bill"
											]
										}
									},
									"response": []
								},
								{
									"name": "Restore base Config",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"None\",\r\n  \"province\": \"\",\r\n  \"state\": \"\",\r\n  \"group_tip_rate\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/config",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"config"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Checkout US Tax TX",
							"item": [
								{
									"name": "close",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "http://localhost:8181/close",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"close"
											]
										}
									},
									"response": []
								},
								{
									"name": "Valid Country US TX",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"US\",\r\n  \"province\": \"\",\r\n  \"state\": \"TX\",\r\n  \"group_tip_rate\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/config",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Inventory Full Load",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Chocolate\": 100000,\r\n  \"Espresso\": 100000,\r\n  \"Milk\": 100000,\r\n  \"Water\": 100000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/inventory",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"inventory"
											]
										}
									},
									"response": []
								},
								{
									"name": "basic check-in",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Header response test\", function () {\r",
													"    customer_id = \"id_1\";\r",
													"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
													"    pm.expect(test).to.be.true;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/check-in",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"check-in"
											]
										}
									},
									"response": []
								},
								{
									"name": "layout with 1 customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response to be valid test\", function () {\r",
													"    let jsonValid = {\r",
													"        \"name\": \"Les 4-FÃ©es\",\r",
													"        \"cubes\": [\r",
													"            {\r",
													"                \"name\": \"Bloom\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 1,\r",
													"                        \"status\": \"Occupied\",\r",
													"                        \"customer_id\": \"id_1\",\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 2,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 3,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 4,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Merryweather\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 5,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 6,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 7,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 8,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Tinker Bell\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 9,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 10,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 11,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 12,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Wanda\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 13,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 14,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 15,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 16,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            }\r",
													"        ]\r",
													"    }\r",
													"    const responseJson = pm.response.json();\r",
													"    const isEqual = _.isEqual(responseJson,jsonValid\r",
													"     );\r",
													"     pm.expect(isEqual).to.be.true;\r",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8181/layout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"layout"
											]
										}
									},
									"response": []
								},
								{
									"name": "Order Valid Customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"orders\": [\"Americano\", \"Dark Roast\", \"Latte\"]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/customers/id_1/orders",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"customers",
												"id_1",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "Checkout",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Header response to return location of the bill\", function () {\r",
													"    customer_id = \"id_1\";\r",
													"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id+ \"/bill\");\r",
													"    pm.expect(test).to.be.true;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"customer_id\": \"id_1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/checkout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"checkout"
											]
										}
									},
									"response": []
								},
								{
									"name": "layout empty",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response to be valid layout empty test\", function () {\r",
													"    let jsonValid = {\r",
													"            \"name\": \"Les 4-FÃ©es\",\r",
													"            \"cubes\": [\r",
													"            {\r",
													"                \"name\": \"Bloom\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 1,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 2,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 3,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 4,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Merryweather\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 5,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 6,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 7,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 8,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Tinker Bell\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 9,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 10,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 11,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 12,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Wanda\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 13,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 14,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 15,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 16,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            }\r",
													"            ]\r",
													"        }\r",
													"    const responseJson = pm.response.json();\r",
													"    const isEqual = _.isEqual(responseJson,jsonValid\r",
													"     );\r",
													"     pm.expect(isEqual).to.be.true;\r",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8181/layout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"layout"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Bill",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"function auCentiemeSuperieur(nombre){\r",
													"    return Math.ceil(100*nombre)/100\r",
													"}\r",
													"\r",
													"pm.test(\"Response to be the coresponding bill\", function () {\r",
													"    // Americano\t2.25$  / Dark Roast\t2.10$ / Latte : 2.95$\r",
													"\r",
													"    let subtotal = 2.25 + 2.10 + 2.95\r",
													"    let taxe_percentage = 6.25 / 100\r",
													"    let taxes = (subtotal * taxe_percentage)\r",
													"    let tip_percentage = 0\r",
													"    let tip = (subtotal) * tip_percentage\r",
													"    let total = subtotal + taxes + tip\r",
													"\r",
													"    let jsonValid = {\r",
													"        \"orders\": [\"Americano\", \"Dark Roast\", \"Latte\"],\r",
													"        \"subtotal\": subtotal,\r",
													"        \"taxes\": auCentiemeSuperieur(taxes) ,\r",
													"        \"tip\": auCentiemeSuperieur(tip),\r",
													"        \"total\": auCentiemeSuperieur(total)\r",
													"    }\r",
													"    const responseJson = pm.response.json();\r",
													"    const isEqual = _.isEqual(responseJson,jsonValid\r",
													"     );\r",
													"     pm.expect(isEqual).to.be.true;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8181/customers/id_1/bill",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"customers",
												"id_1",
												"bill"
											]
										}
									},
									"response": []
								},
								{
									"name": "Restore base Config",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"None\",\r\n  \"province\": \"\",\r\n  \"state\": \"\",\r\n  \"group_tip_rate\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/config",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"config"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Checkout US Tax CA",
							"item": [
								{
									"name": "close",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "http://localhost:8181/close",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"close"
											]
										}
									},
									"response": []
								},
								{
									"name": "Valid Country US CA",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"US\",\r\n  \"province\": \"\",\r\n  \"state\": \"CA\",\r\n  \"group_tip_rate\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/config",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Inventory Full Load",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Chocolate\": 100000,\r\n  \"Espresso\": 100000,\r\n  \"Milk\": 100000,\r\n  \"Water\": 100000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/inventory",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"inventory"
											]
										}
									},
									"response": []
								},
								{
									"name": "basic check-in",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Header response test\", function () {\r",
													"    customer_id = \"id_1\";\r",
													"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
													"    pm.expect(test).to.be.true;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/check-in",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"check-in"
											]
										}
									},
									"response": []
								},
								{
									"name": "layout with 1 customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response to be valid test\", function () {\r",
													"    let jsonValid = {\r",
													"        \"name\": \"Les 4-FÃ©es\",\r",
													"        \"cubes\": [\r",
													"            {\r",
													"                \"name\": \"Bloom\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 1,\r",
													"                        \"status\": \"Occupied\",\r",
													"                        \"customer_id\": \"id_1\",\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 2,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 3,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 4,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Merryweather\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 5,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 6,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 7,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 8,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Tinker Bell\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 9,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 10,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 11,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 12,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Wanda\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 13,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 14,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 15,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 16,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            }\r",
													"        ]\r",
													"    }\r",
													"    const responseJson = pm.response.json();\r",
													"    const isEqual = _.isEqual(responseJson,jsonValid\r",
													"     );\r",
													"     pm.expect(isEqual).to.be.true;\r",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8181/layout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"layout"
											]
										}
									},
									"response": []
								},
								{
									"name": "Order Valid Customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"orders\": [\"Americano\", \"Dark Roast\", \"Latte\"]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/customers/id_1/orders",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"customers",
												"id_1",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "Checkout",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Header response to return location of the bill\", function () {\r",
													"    customer_id = \"id_1\";\r",
													"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id+ \"/bill\");\r",
													"    pm.expect(test).to.be.true;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"customer_id\": \"id_1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/checkout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"checkout"
											]
										}
									},
									"response": []
								},
								{
									"name": "layout empty",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response to be valid layout empty test\", function () {\r",
													"    let jsonValid = {\r",
													"            \"name\": \"Les 4-FÃ©es\",\r",
													"            \"cubes\": [\r",
													"            {\r",
													"                \"name\": \"Bloom\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 1,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 2,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 3,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 4,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Merryweather\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 5,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 6,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 7,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 8,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Tinker Bell\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 9,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 10,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 11,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 12,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Wanda\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 13,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 14,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 15,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 16,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            }\r",
													"            ]\r",
													"        }\r",
													"    const responseJson = pm.response.json();\r",
													"    const isEqual = _.isEqual(responseJson,jsonValid\r",
													"     );\r",
													"     pm.expect(isEqual).to.be.true;\r",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8181/layout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"layout"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Bill",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"function auCentiemeSuperieur(nombre){\r",
													"    return Math.ceil(100*nombre)/100\r",
													"}\r",
													"\r",
													"pm.test(\"Response to be the coresponding bill\", function () {\r",
													"    let subtotal = 2.25 + 2.10 + 2.95\r",
													"    let taxe_percentage = 7.25 / 100\r",
													"    let taxes = (subtotal * taxe_percentage)\r",
													"    let tip_percentage = 0\r",
													"    let tip = (subtotal) * tip_percentage\r",
													"    let total = subtotal + taxes + tip\r",
													"\r",
													"    let jsonValid = {\r",
													"        \"orders\": [\"Americano\", \"Dark Roast\", \"Latte\"],\r",
													"        \"subtotal\": subtotal,\r",
													"        \"taxes\": auCentiemeSuperieur(taxes) ,\r",
													"        \"tip\": auCentiemeSuperieur(tip),\r",
													"        \"total\": auCentiemeSuperieur(total)\r",
													"    }\r",
													"    \r",
													"    const responseJson = pm.response.json();\r",
													"    const isEqual = _.isEqual(responseJson,jsonValid\r",
													"     );\r",
													"     pm.expect(isEqual).to.be.true;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8181/customers/id_1/bill",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"customers",
												"id_1",
												"bill"
											]
										}
									},
									"response": []
								},
								{
									"name": "Restore base Config",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"None\",\r\n  \"province\": \"\",\r\n  \"state\": \"\",\r\n  \"group_tip_rate\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/config",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"config"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Checkout CA Tax",
							"item": [
								{
									"name": "close",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "http://localhost:8181/close",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"close"
											]
										}
									},
									"response": []
								},
								{
									"name": "Valid Country CA",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"CA\",\r\n  \"province\": \"AB\",\r\n  \"state\": \"AL\",\r\n  \"group_tip_rate\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/config",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Inventory Full Load",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Chocolate\": 100000,\r\n  \"Espresso\": 100000,\r\n  \"Milk\": 100000,\r\n  \"Water\": 100000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/inventory",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"inventory"
											]
										}
									},
									"response": []
								},
								{
									"name": "basic check-in",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Header response test\", function () {\r",
													"    customer_id = \"id_1\";\r",
													"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
													"    pm.expect(test).to.be.true;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/check-in",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"check-in"
											]
										}
									},
									"response": []
								},
								{
									"name": "layout with 1 customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response to be valid test\", function () {\r",
													"    let jsonValid = {\r",
													"        \"name\": \"Les 4-FÃ©es\",\r",
													"        \"cubes\": [\r",
													"            {\r",
													"                \"name\": \"Bloom\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 1,\r",
													"                        \"status\": \"Occupied\",\r",
													"                        \"customer_id\": \"id_1\",\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 2,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 3,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 4,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Merryweather\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 5,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 6,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 7,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 8,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Tinker Bell\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 9,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 10,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 11,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 12,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Wanda\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 13,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 14,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 15,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 16,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            }\r",
													"        ]\r",
													"    }\r",
													"    const responseJson = pm.response.json();\r",
													"    const isEqual = _.isEqual(responseJson,jsonValid\r",
													"     );\r",
													"     pm.expect(isEqual).to.be.true;\r",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8181/layout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"layout"
											]
										}
									},
									"response": []
								},
								{
									"name": "Order Valid Customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"orders\": [\"Americano\", \"Dark Roast\", \"Latte\"]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/customers/id_1/orders",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"customers",
												"id_1",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "Checkout",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Header response to return location of the bill\", function () {\r",
													"    customer_id = \"id_1\";\r",
													"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id+ \"/bill\");\r",
													"    pm.expect(test).to.be.true;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"customer_id\": \"id_1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/checkout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"checkout"
											]
										}
									},
									"response": []
								},
								{
									"name": "layout empty",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response to be valid layout empty test\", function () {\r",
													"    let jsonValid = {\r",
													"            \"name\": \"Les 4-FÃ©es\",\r",
													"            \"cubes\": [\r",
													"            {\r",
													"                \"name\": \"Bloom\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 1,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 2,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 3,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 4,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Merryweather\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 5,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 6,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 7,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 8,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Tinker Bell\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 9,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 10,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 11,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 12,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Wanda\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 13,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 14,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 15,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 16,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            }\r",
													"            ]\r",
													"        }\r",
													"    const responseJson = pm.response.json();\r",
													"    const isEqual = _.isEqual(responseJson,jsonValid\r",
													"     );\r",
													"     pm.expect(isEqual).to.be.true;\r",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8181/layout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"layout"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Bill",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"function auCentiemeSuperieur(nombre){\r",
													"    return Math.ceil(100*nombre)/100\r",
													"}\r",
													"\r",
													"pm.test(\"Response to be the coresponding bill\", function () {\r",
													"    let subtotal = 2.25 + 2.10 + 2.95\r",
													"    let taxe_percentage = 5 / 100\r",
													"    let taxes = (subtotal * taxe_percentage)\r",
													"    let tip_percentage = 0\r",
													"    let tip = (subtotal) * tip_percentage\r",
													"    let total = subtotal + taxes + tip\r",
													"\r",
													"    let jsonValid = {\r",
													"        \"orders\": [\"Americano\", \"Dark Roast\", \"Latte\"],\r",
													"        \"subtotal\": subtotal,\r",
													"        \"taxes\": auCentiemeSuperieur(taxes) ,\r",
													"        \"tip\": auCentiemeSuperieur(tip),\r",
													"        \"total\": auCentiemeSuperieur(total)\r",
													"    }\r",
													"    const responseJson = pm.response.json();\r",
													"    const isEqual = _.isEqual(responseJson,jsonValid\r",
													"     );\r",
													"     pm.expect(isEqual).to.be.true;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8181/customers/id_1/bill",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"customers",
												"id_1",
												"bill"
											]
										}
									},
									"response": []
								},
								{
									"name": "Restore base Config",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"None\",\r\n  \"province\": \"\",\r\n  \"state\": \"\",\r\n  \"group_tip_rate\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/config",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"config"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Checkout CA Tax QC",
							"item": [
								{
									"name": "close",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "http://localhost:8181/close",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"close"
											]
										}
									},
									"response": []
								},
								{
									"name": "Valid Country CA QC",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"CA\",\r\n  \"province\": \"QC\",\r\n  \"state\": \"\",\r\n  \"group_tip_rate\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/config",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Inventory Full Load",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Chocolate\": 100000,\r\n  \"Espresso\": 100000,\r\n  \"Milk\": 100000,\r\n  \"Water\": 100000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/inventory",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"inventory"
											]
										}
									},
									"response": []
								},
								{
									"name": "basic check-in",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Header response test\", function () {\r",
													"    customer_id = \"id_1\";\r",
													"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
													"    pm.expect(test).to.be.true;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/check-in",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"check-in"
											]
										}
									},
									"response": []
								},
								{
									"name": "layout with 1 customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response to be valid test\", function () {\r",
													"    let jsonValid = {\r",
													"        \"name\": \"Les 4-FÃ©es\",\r",
													"        \"cubes\": [\r",
													"            {\r",
													"                \"name\": \"Bloom\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 1,\r",
													"                        \"status\": \"Occupied\",\r",
													"                        \"customer_id\": \"id_1\",\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 2,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 3,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 4,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Merryweather\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 5,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 6,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 7,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 8,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Tinker Bell\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 9,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 10,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 11,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 12,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Wanda\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 13,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 14,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 15,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 16,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            }\r",
													"        ]\r",
													"    }\r",
													"    const responseJson = pm.response.json();\r",
													"    const isEqual = _.isEqual(responseJson,jsonValid\r",
													"     );\r",
													"     pm.expect(isEqual).to.be.true;\r",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8181/layout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"layout"
											]
										}
									},
									"response": []
								},
								{
									"name": "Order Valid Customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"orders\": [\"Americano\", \"Dark Roast\", \"Latte\"]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/customers/id_1/orders",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"customers",
												"id_1",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "Checkout",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Header response to return location of the bill\", function () {\r",
													"    customer_id = \"id_1\";\r",
													"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id+ \"/bill\");\r",
													"    pm.expect(test).to.be.true;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"customer_id\": \"id_1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/checkout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"checkout"
											]
										}
									},
									"response": []
								},
								{
									"name": "layout empty",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response to be valid layout empty test\", function () {\r",
													"    let jsonValid = {\r",
													"            \"name\": \"Les 4-FÃ©es\",\r",
													"            \"cubes\": [\r",
													"            {\r",
													"                \"name\": \"Bloom\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 1,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 2,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 3,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 4,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Merryweather\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 5,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 6,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 7,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 8,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Tinker Bell\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 9,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 10,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 11,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 12,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Wanda\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 13,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 14,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 15,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 16,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            }\r",
													"            ]\r",
													"        }\r",
													"    const responseJson = pm.response.json();\r",
													"    const isEqual = _.isEqual(responseJson,jsonValid\r",
													"     );\r",
													"     pm.expect(isEqual).to.be.true;\r",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8181/layout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"layout"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Bill",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"function auCentiemeSuperieur(nombre){\r",
													"    return Math.ceil(100*nombre)/100\r",
													"}\r",
													"\r",
													"pm.test(\"Response to be the coresponding bill\", function () {\r",
													"    let subtotal = 2.25 + 2.10 + 2.95\r",
													"    let taxe_percentage = ( 5 + 9.975 )/ 100\r",
													"    let taxes = (subtotal * taxe_percentage)\r",
													"    let tip_percentage = 0\r",
													"    let tip = (subtotal) * tip_percentage\r",
													"    let total = subtotal + taxes + tip\r",
													"\r",
													"    let jsonValid = {\r",
													"        \"orders\": [\"Americano\", \"Dark Roast\", \"Latte\"],\r",
													"        \"subtotal\": subtotal,\r",
													"        \"taxes\": auCentiemeSuperieur(taxes) ,\r",
													"        \"tip\": auCentiemeSuperieur(tip),\r",
													"        \"total\": auCentiemeSuperieur(total)\r",
													"    }\r",
													"    const responseJson = pm.response.json();\r",
													"    const isEqual = _.isEqual(responseJson,jsonValid\r",
													"     );\r",
													"     pm.expect(isEqual).to.be.true;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8181/customers/id_1/bill",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"customers",
												"id_1",
												"bill"
											]
										}
									},
									"response": []
								},
								{
									"name": "Restore base Config",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"None\",\r\n  \"province\": \"\",\r\n  \"state\": \"\",\r\n  \"group_tip_rate\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/config",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"config"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Checkout CL Tax",
							"item": [
								{
									"name": "close",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "http://localhost:8181/close",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"close"
											]
										}
									},
									"response": []
								},
								{
									"name": "Valid Country CL QC",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"CL\",\r\n  \"province\": \"QC\",\r\n  \"state\": \"\",\r\n  \"group_tip_rate\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/config",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Inventory Full Load",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Chocolate\": 100000,\r\n  \"Espresso\": 100000,\r\n  \"Milk\": 100000,\r\n  \"Water\": 100000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/inventory",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"inventory"
											]
										}
									},
									"response": []
								},
								{
									"name": "basic check-in",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Header response test\", function () {\r",
													"    customer_id = \"id_1\";\r",
													"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
													"    pm.expect(test).to.be.true;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/check-in",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"check-in"
											]
										}
									},
									"response": []
								},
								{
									"name": "layout with 1 customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response to be valid test\", function () {\r",
													"    let jsonValid = {\r",
													"        \"name\": \"Les 4-FÃ©es\",\r",
													"        \"cubes\": [\r",
													"            {\r",
													"                \"name\": \"Bloom\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 1,\r",
													"                        \"status\": \"Occupied\",\r",
													"                        \"customer_id\": \"id_1\",\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 2,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 3,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 4,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Merryweather\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 5,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 6,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 7,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 8,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Tinker Bell\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 9,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 10,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 11,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 12,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Wanda\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 13,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 14,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 15,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 16,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            }\r",
													"        ]\r",
													"    }\r",
													"    const responseJson = pm.response.json();\r",
													"    const isEqual = _.isEqual(responseJson,jsonValid\r",
													"     );\r",
													"     pm.expect(isEqual).to.be.true;\r",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8181/layout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"layout"
											]
										}
									},
									"response": []
								},
								{
									"name": "Order Valid Customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"orders\": [\"Americano\", \"Dark Roast\", \"Latte\"]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/customers/id_1/orders",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"customers",
												"id_1",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "Checkout",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Header response to return location of the bill\", function () {\r",
													"    customer_id = \"id_1\";\r",
													"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id+ \"/bill\");\r",
													"    pm.expect(test).to.be.true;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"customer_id\": \"id_1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/checkout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"checkout"
											]
										}
									},
									"response": []
								},
								{
									"name": "layout empty",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response to be valid layout empty test\", function () {\r",
													"    let jsonValid = {\r",
													"            \"name\": \"Les 4-FÃ©es\",\r",
													"            \"cubes\": [\r",
													"            {\r",
													"                \"name\": \"Bloom\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 1,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 2,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 3,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 4,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Merryweather\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 5,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 6,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 7,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 8,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Tinker Bell\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 9,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 10,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 11,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 12,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            },\r",
													"            {\r",
													"                \"name\": \"Wanda\",\r",
													"                \"seats\": [\r",
													"                    {\r",
													"                        \"number\": 13,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 14,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 15,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    },\r",
													"                    {\r",
													"                        \"number\": 16,\r",
													"                        \"status\": \"Available\",\r",
													"                        \"customer_id\": null,\r",
													"                        \"group_name\": null\r",
													"                    }\r",
													"                ]\r",
													"            }\r",
													"            ]\r",
													"        }\r",
													"    const responseJson = pm.response.json();\r",
													"    const isEqual = _.isEqual(responseJson,jsonValid\r",
													"     );\r",
													"     pm.expect(isEqual).to.be.true;\r",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8181/layout",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"layout"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Bill",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"function auCentiemeSuperieur(nombre){\r",
													"    return Math.ceil(100*nombre)/100\r",
													"}\r",
													"\r",
													"pm.test(\"Response to be the coresponding bill\", function () {\r",
													"    let subtotal = 2.25 + 2.10 + 2.95\r",
													"    let taxe_percentage = 19 / 100\r",
													"    let taxes = (subtotal * taxe_percentage)\r",
													"    let tip_percentage = 0\r",
													"    let tip = (subtotal) * tip_percentage\r",
													"    let total = subtotal + taxes + tip\r",
													"\r",
													"    let jsonValid = {\r",
													"        \"orders\": [\"Americano\", \"Dark Roast\", \"Latte\"],\r",
													"        \"subtotal\": subtotal,\r",
													"        \"taxes\": auCentiemeSuperieur(taxes) ,\r",
													"        \"tip\": auCentiemeSuperieur(tip),\r",
													"        \"total\": auCentiemeSuperieur(total)\r",
													"    }\r",
													"    const responseJson = pm.response.json();\r",
													"    const isEqual = _.isEqual(responseJson,jsonValid\r",
													"     );\r",
													"     pm.expect(isEqual).to.be.true;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8181/customers/id_1/bill",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"customers",
												"id_1",
												"bill"
											]
										}
									},
									"response": []
								},
								{
									"name": "Restore base Config",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"None\",\r\n  \"province\": \"\",\r\n  \"state\": \"\",\r\n  \"group_tip_rate\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/config",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"config"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Customer not exist",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "Checkout",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be INVALID_CUSTOMER_ID\", function () {\r",
											"    let jsonValid = {\r",
											"        \"error\": \"INVALID_CUSTOMER_ID\",\r",
											"        \"description\": \"The customer does not exist.\"\r",
											"    } \r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"customer_id\": \"id_1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/checkout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"checkout"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Bill",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be INVALID_CUSTOMER_ID\", function () {\r",
											"    let jsonValid = {\r",
											"        \"error\": \"INVALID_CUSTOMER_ID\",\r",
											"        \"description\": \"The customer does not exist.\"\r",
											"    } \r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/customers/id_1/bill",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"bill"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Customer not done the checkout",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "basic check-in",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Bill",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be INVALID_CUSTOMER_ID\", function () {\r",
											"    let jsonValid = {\r",
											"        \"error\": \"NO_BILL\",\r",
											"        \"description\": \"The customer needs to do a checkout before receiving his bill.\"\r",
											"    } \r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/customers/id_1/bill",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"bill"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Config with country",
					"item": [
						{
							"name": "Valid Country",
							"item": [
								{
									"name": "Valid Country US",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"US\",\r\n  \"province\": \"\",\r\n  \"state\": \"AL\",\r\n  \"group_tip_rate\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/config",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Valid Country US and State",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"US\",\r\n  \"province\": \"\",\r\n  \"state\": \"TX\",\r\n  \"group_tip_rate\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/config",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Valid Country CA",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"CA\",\r\n  \"province\": \"AB\",\r\n  \"state\": \"\",\r\n  \"group_tip_rate\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/config",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Valid Country CA and Province",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"CA\",\r\n  \"province\": \"QC\",\r\n  \"state\": \"\",\r\n  \"group_tip_rate\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/config",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Valid Country CA and province and state",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"CA\",\r\n  \"province\": \"QC\",\r\n  \"state\": \"TX\",\r\n  \"group_tip_rate\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/config",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"config"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Invalid Coutry",
							"item": [
								{
									"name": "Invalid Config Country",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response to be INVALID_COUNTRY when country not valid\", function () {\r",
													"    let jsonValid = {\r",
													"        \"error\": \"INVALID_COUNTRY\",\r",
													"        \"description\": \"The specified country is invalid.\"\r",
													"    } \r",
													"    const responseJson = pm.response.json();\r",
													"    const isEqual = _.isEqual(responseJson,jsonValid\r",
													"     );\r",
													"     pm.expect(isEqual).to.be.true;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"Invalid Country\",\r\n  \"province\": \"\",\r\n  \"state\": \"\",\r\n  \"group_tip_rate\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/config",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Invalid Config Province",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response to be INVALID_COUNTRY when province not valid\", function () {\r",
													"    let jsonValid = {\r",
													"        \"error\": \"INVALID_COUNTRY\",\r",
													"        \"description\": \"The specified country is invalid.\"\r",
													"    } \r",
													"    const responseJson = pm.response.json();\r",
													"    const isEqual = _.isEqual(responseJson,jsonValid\r",
													"     );\r",
													"     pm.expect(isEqual).to.be.true;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"\",\r\n  \"province\": \"Invalid Province\",\r\n  \"state\": \"\",\r\n  \"group_tip_rate\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/config",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Invalid Config Country Province Combination 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response to be INVALID_COUNTRY when province not valid\", function () {\r",
													"    let jsonValid = {\r",
													"        \"error\": \"INVALID_COUNTRY\",\r",
													"        \"description\": \"The specified country is invalid.\"\r",
													"    } \r",
													"    const responseJson = pm.response.json();\r",
													"    const isEqual = _.isEqual(responseJson,jsonValid\r",
													"     );\r",
													"     pm.expect(isEqual).to.be.true;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"US\",\r\n  \"province\": \"QC\",\r\n  \"state\": \"\",\r\n  \"group_tip_rate\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/config",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Invalid Config Country Province Combination 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response to be INVALID_COUNTRY when province not valid\", function () {\r",
													"    let jsonValid = {\r",
													"        \"error\": \"INVALID_COUNTRY\",\r",
													"        \"description\": \"The specified country is invalid.\"\r",
													"    } \r",
													"    const responseJson = pm.response.json();\r",
													"    const isEqual = _.isEqual(responseJson,jsonValid\r",
													"     );\r",
													"     pm.expect(isEqual).to.be.true;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"CA\",\r\n  \"province\": \"\",\r\n  \"state\": \"TX\",\r\n  \"group_tip_rate\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8181/config",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8181",
											"path": [
												"config"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Restore base Config",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"None\",\r\n  \"province\": \"\",\r\n  \"state\": \"\",\r\n  \"group_tip_rate\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/config",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"config"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "When Last Guy from Group Quit",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "Group reservation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"group_name\": \"Bulletproof Boy Scouts\",\n  \"group_size\": 6\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/reservations",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"reservations"
									]
								}
							},
							"response": []
						},
						{
							"name": "basic check-in",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\",\r\n    \"group_name\": \"Bulletproof Boy Scouts\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "layout with 1 customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be valid test\", function () {\r",
											"    let jsonValid = {\r",
											"        \"name\": \"Les 4-FÃ©es\",\r",
											"        \"cubes\": [\r",
											"            {\r",
											"                \"name\": \"Bloom\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 1,\r",
											"                        \"status\": \"Occupied\",\r",
											"                        \"customer_id\": \"id_1\",\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 2,\r",
											"                        \"status\": \"Reserved\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 3,\r",
											"                        \"status\": \"Reserved\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 4,\r",
											"                        \"status\": \"Reserved\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Merryweather\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 5,\r",
											"                        \"status\": \"Reserved\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 6,\r",
											"                        \"status\": \"Reserved\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 7,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 8,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Tinker Bell\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 9,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 10,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 11,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 12,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Wanda\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 13,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 14,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 15,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 16,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        ]\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/layout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"layout"
									]
								}
							},
							"response": []
						},
						{
							"name": "Checkout",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response to return location of the bill\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id+ \"/bill\");\r",
											"    pm.expect(test).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"customer_id\": \"id_1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/checkout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"checkout"
									]
								}
							},
							"response": []
						},
						{
							"name": "layout empty Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be valid layout empty test\", function () {\r",
											"    let jsonValid = {\r",
											"            \"name\": \"Les 4-FÃ©es\",\r",
											"            \"cubes\": [\r",
											"            {\r",
											"                \"name\": \"Bloom\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 1,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 2,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 3,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 4,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Merryweather\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 5,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 6,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 7,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 8,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Tinker Bell\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 9,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 10,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 11,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 12,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Wanda\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 13,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 14,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 15,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 16,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"            ]\r",
											"        }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/layout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"layout"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "When People from Group Quit Seats are Available",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "Group reservation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"group_name\": \"Bulletproof Boy Scouts\",\n  \"group_size\": 6\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/reservations",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"reservations"
									]
								}
							},
							"response": []
						},
						{
							"name": "basic check-in of a guy in the group",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\",\r\n    \"group_name\": \"Bulletproof Boy Scouts\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "basic check-in of a guy in the group Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"id_2\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_2\",\r\n    \"customer_name\": \"name_2\",\r\n    \"group_name\": \"Bulletproof Boy Scouts\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "layout with 2 customers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be valid test\", function () {\r",
											"    let jsonValid = {\r",
											"        \"name\": \"Les 4-FÃ©es\",\r",
											"        \"cubes\": [\r",
											"            {\r",
											"                \"name\": \"Bloom\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 1,\r",
											"                        \"status\": \"Occupied\",\r",
											"                        \"customer_id\": \"id_1\",\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 2,\r",
											"                        \"status\": \"Occupied\",\r",
											"                        \"customer_id\": \"id_2\",\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 3,\r",
											"                        \"status\": \"Reserved\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 4,\r",
											"                        \"status\": \"Reserved\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Merryweather\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 5,\r",
											"                        \"status\": \"Reserved\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 6,\r",
											"                        \"status\": \"Reserved\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 7,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 8,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Tinker Bell\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 9,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 10,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 11,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 12,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Wanda\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 13,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 14,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 15,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 16,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        ]\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/layout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"layout"
									]
								}
							},
							"response": []
						},
						{
							"name": "Checkout of the 1st guy of the group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response to return location of the bill\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id+ \"/bill\");\r",
											"    pm.expect(test).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"customer_id\": \"id_1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/checkout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"checkout"
									]
								}
							},
							"response": []
						},
						{
							"name": "layout with 1 customers and 1st seat free",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be valid test\", function () {\r",
											"    let jsonValid = {\r",
											"        \"name\": \"Les 4-FÃ©es\",\r",
											"        \"cubes\": [\r",
											"            {\r",
											"                \"name\": \"Bloom\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 1,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 2,\r",
											"                        \"status\": \"Occupied\",\r",
											"                        \"customer_id\": \"id_2\",\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 3,\r",
											"                        \"status\": \"Reserved\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 4,\r",
											"                        \"status\": \"Reserved\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Merryweather\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 5,\r",
											"                        \"status\": \"Reserved\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 6,\r",
											"                        \"status\": \"Reserved\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 7,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 8,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Tinker Bell\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 9,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 10,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 11,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 12,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Wanda\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 13,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 14,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 15,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 16,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        ]\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/layout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"layout"
									]
								}
							},
							"response": []
						},
						{
							"name": "basic check-in",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"id_new\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_new\",\r\n    \"customer_name\": \"new guy\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "layout with 2 customers one from group and one not",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be valid test\", function () {\r",
											"    let jsonValid = {\r",
											"        \"name\": \"Les 4-FÃ©es\",\r",
											"        \"cubes\": [\r",
											"            {\r",
											"                \"name\": \"Bloom\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 1,\r",
											"                        \"status\": \"Occupied\",\r",
											"                        \"customer_id\": \"id_new\",\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 2,\r",
											"                        \"status\": \"Occupied\",\r",
											"                        \"customer_id\": \"id_2\",\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 3,\r",
											"                        \"status\": \"Reserved\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 4,\r",
											"                        \"status\": \"Reserved\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Merryweather\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 5,\r",
											"                        \"status\": \"Reserved\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 6,\r",
											"                        \"status\": \"Reserved\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": \"Bulletproof Boy Scouts\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 7,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 8,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Tinker Bell\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 9,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 10,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 11,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 12,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Wanda\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 13,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 14,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 15,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 16,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        ]\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/layout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"layout"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "S7 Stock",
			"item": [
				{
					"name": "Empty Inventory",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "Inventory Empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Inventory is empty test\", function () {\r",
											"    let jsonValid = {\r",
											"        \"Chocolate\": 0,\r",
											"        \"Espresso\": 0,\r",
											"        \"Milk\": 0,\r",
											"        \"Water\": 0\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid);\r",
											"    pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/inventory",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"inventory"
									]
								}
							},
							"response": []
						},
						{
							"name": "Inventory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Chocolate\": 0,\r\n  \"Espresso\": 0,\r\n  \"Milk\": 0,\r\n  \"Water\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/inventory",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"inventory"
									]
								}
							},
							"response": []
						},
						{
							"name": "Inventory Empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Inventory is empty test\", function () {\r",
											"    let jsonValid = {\r",
											"        \"Chocolate\": 0,\r",
											"        \"Espresso\": 0,\r",
											"        \"Milk\": 0,\r",
											"        \"Water\": 0\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid);\r",
											"    pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/inventory",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"inventory"
									]
								}
							},
							"response": []
						},
						{
							"name": "basic check-in",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be the insuficent ingredient\", function () {\r",
											"    let jsonValid = {\r",
											"        \"error\": \"INSUFFICIENT_INGREDIENTS\",\r",
											"        \"description\": \"We lack the necessary number of ingredients to fulfill your order.\"\r",
											"        }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"orders\": [\"Latte\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/customers/id_1/orders",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"orders"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Put in Inventory",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "Inventory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Chocolate\": 1,\r\n  \"Espresso\": 2,\r\n  \"Milk\": 3,\r\n  \"Water\": 4\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/inventory",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"inventory"
									]
								}
							},
							"response": []
						},
						{
							"name": "Inventory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Inventory is with coresponding quantity\", function () {\r",
											"    let jsonValid = {\r",
											"        \"Chocolate\": 1,\r",
											"        \"Espresso\": 2,\r",
											"        \"Milk\": 3,\r",
											"        \"Water\": 4\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid);\r",
											"    pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/inventory",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"inventory"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Insufficant Ingredient #1",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "basic check-in",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be the insuficent ingredient\", function () {\r",
											"    let jsonValid = {\r",
											"        \"error\": \"INSUFFICIENT_INGREDIENTS\",\r",
											"        \"description\": \"We lack the necessary number of ingredients to fulfill your order.\"\r",
											"        }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"orders\": [\"Latte\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/customers/id_1/orders",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"orders"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Insufficant Ingredient for 2 items",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "Inventory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Chocolate\": 0,\r\n  \"Espresso\": 60,\r\n  \"Milk\": 0,\r\n  \"Water\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/inventory",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"inventory"
									]
								}
							},
							"response": []
						},
						{
							"name": "Inventory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Inventory is with coresponding quantity\", function () {\r",
											"    let jsonValid = {\r",
											"        \"Chocolate\": 0,\r",
											"        \"Espresso\": 60,\r",
											"        \"Milk\": 0,\r",
											"        \"Water\": 0\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid);\r",
											"    pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/inventory",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"inventory"
									]
								}
							},
							"response": []
						},
						{
							"name": "basic check-in",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be the insuficent ingredient\", function () {\r",
											"    let jsonValid = {\r",
											"        \"error\": \"INSUFFICIENT_INGREDIENTS\",\r",
											"        \"description\": \"We lack the necessary number of ingredients to fulfill your order.\"\r",
											"        }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"orders\": [\"Espresso\",\"Espresso\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/customers/id_1/orders",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Inventory same as init",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Inventory is with coresponding quantity\", function () {\r",
											"    let jsonValid = {\r",
											"        \"Chocolate\": 0,\r",
											"        \"Espresso\": 60,\r",
											"        \"Milk\": 0,\r",
											"        \"Water\": 0\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid);\r",
											"    pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/inventory",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"inventory"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Valid Order reduce inventory #1",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "Inventory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Chocolate\": 100,\r\n  \"Espresso\": 100,\r\n  \"Milk\": 100,\r\n  \"Water\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/inventory",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"inventory"
									]
								}
							},
							"response": []
						},
						{
							"name": "Inventory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Inventory is with coresponding quantity\", function () {\r",
											"    let jsonValid = {\r",
											"        \"Chocolate\": 100,\r",
											"        \"Espresso\": 100,\r",
											"        \"Milk\": 100,\r",
											"        \"Water\": 100\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid);\r",
											"    pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/inventory",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"inventory"
									]
								}
							},
							"response": []
						},
						{
							"name": "basic check-in",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"orders\": [\"Dark Roast\",\"Mocha\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/customers/id_1/orders",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Inventory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Inventory is with coresponding quantity\", function () {\r",
											"    //Dark Roast ->\t40 espresso + 40 water + 10 chocolate + 10 milk.\r",
											"    //Mocha      ->\t50 espresso + 40 milk + 10 chocolate.\r",
											"    //previous order was   \"orders\": [\"Dark Roast\",\"Mocha\"]\r",
											"    let baseInventory = 100\r",
											"\r",
											"    let updateChocolate = 10 + 10;\r",
											"    let updateExpresso = 40 + 50;\r",
											"    let updateMilk = 10 + 40;\r",
											"    let updateWater = 40\r",
											"\r",
											"    let jsonValid = {\r",
											"        \"Chocolate\": baseInventory - updateChocolate,\r",
											"        \"Espresso\": baseInventory - updateExpresso,\r",
											"        \"Milk\": baseInventory - updateMilk,\r",
											"        \"Water\": baseInventory - updateWater\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid);\r",
											"    pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/inventory",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"inventory"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Valid Order reduce inventory #2",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "Inventory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Chocolate\": 0,\r\n  \"Espresso\": 120,\r\n  \"Milk\": 0,\r\n  \"Water\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/inventory",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"inventory"
									]
								}
							},
							"response": []
						},
						{
							"name": "Inventory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Inventory is with coresponding quantity\", function () {\r",
											"    let jsonValid = {\r",
											"        \"Chocolate\": 0,\r",
											"        \"Espresso\": 120,\r",
											"        \"Milk\": 0,\r",
											"        \"Water\": 0\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid);\r",
											"    pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/inventory",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"inventory"
									]
								}
							},
							"response": []
						},
						{
							"name": "basic check-in",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"orders\": [\"Espresso\",\"Espresso\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/customers/id_1/orders",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Inventory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Inventory is with coresponding quantity\", function () {\r",
											"    //Espresso ->\t60 espresso.\r",
											"    //previous order was     \"orders\": [\"Espresso\",\"Espresso\"]\r",
											"    let baseInventory = 120\r",
											"\r",
											"    let updateChocolate = 0;\r",
											"    let updateExpresso = (60 + 60);\r",
											"    let updateMilk = 0;\r",
											"    let updateWater = 0\r",
											"\r",
											"    let jsonValid = {\r",
											"        \"Chocolate\":  updateChocolate,\r",
											"        \"Espresso\": baseInventory - updateExpresso,\r",
											"        \"Milk\": updateMilk,\r",
											"        \"Water\": updateWater\r",
											"    }\r",
											"    \r",
											"    const responseJson = pm.response.json();\r",
											"    console.log(\"testRomain\",responseJson)\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid);\r",
											"    pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/inventory",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"inventory"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Surprise Xmax",
			"item": [
				{
					"name": "Default tip rate",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "basic check-in",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "Checkout",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response to return location of the bill\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id+ \"/bill\");\r",
											"    pm.expect(test).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"customer_id\": \"id_1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/checkout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"checkout"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get empty Bill",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be an empty bill with 0 total\", function () {\r",
											"        let jsonValid = {\r",
											"        \"orders\": [],\r",
											"        \"subtotal\": 0,\r",
											"        \"taxes\": 0,\r",
											"        \"tip\": 0,\r",
											"        \"total\": 0\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/customers/id_1/bill",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"bill"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Set Tip rate",
					"item": [
						{
							"name": "Config with tip Rate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"None\",\r\n  \"province\": \"\",\r\n  \"state\": \"\",\r\n  \"group_tip_rate\": 10\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/config",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"config"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Invalid Tip Rate",
					"item": [
						{
							"name": "Negative Type Rate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Invalid group type rate negative\", function () {\r",
											"        let jsonValid = {\r",
											"        \"error\": \"INVALID_GROUP_TIP_RATE\",\r",
											"        \"description\": \"The group tip rate must be set to a value between 0 to 100.\"\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"None\",\r\n  \"province\": \"\",\r\n  \"state\": \"\",\r\n  \"group_tip_rate\": -10\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/config",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"config"
									]
								}
							},
							"response": []
						},
						{
							"name": "Superior 100 Type Rate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Invalid group type rate superior to 100\", function () {\r",
											"        let jsonValid = {\r",
											"        \"error\": \"INVALID_GROUP_TIP_RATE\",\r",
											"        \"description\": \"The group tip rate must be set to a value between 0 to 100.\"\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"None\",\r\n  \"province\": \"\",\r\n  \"state\": \"\",\r\n  \"group_tip_rate\": 101\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/config",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"config"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Order With Taxe Rate for group",
					"item": [
						{
							"name": "close",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/close",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "Valid Country US TX",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"US\",\r\n  \"province\": \"\",\r\n  \"state\": \"TX\",\r\n  \"group_tip_rate\": 15\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/config",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"config"
									]
								}
							},
							"response": []
						},
						{
							"name": "Inventory Full Load",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Chocolate\": 100000,\r\n  \"Espresso\": 100000,\r\n  \"Milk\": 100000,\r\n  \"Water\": 100000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/inventory",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"inventory"
									]
								}
							},
							"response": []
						},
						{
							"name": "Group reservation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"group_name\": \"group_name\",\n  \"group_size\": 2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/reservations",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"reservations"
									]
								}
							},
							"response": []
						},
						{
							"name": "basic check-in",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response test\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id);\r",
											"    pm.expect(test).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"customer_id\": \"id_1\",\r\n    \"customer_name\": \"name_1\",\r\n    \"group_name\": \"group_name\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/check-in",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"check-in"
									]
								}
							},
							"response": []
						},
						{
							"name": "layout with 1 customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be valid test\", function () {\r",
											"    let jsonValid = {\r",
											"        \"name\": \"Les 4-FÃ©es\",\r",
											"        \"cubes\": [\r",
											"            {\r",
											"                \"name\": \"Bloom\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 1,\r",
											"                        \"status\": \"Occupied\",\r",
											"                        \"customer_id\": \"id_1\",\r",
											"                        \"group_name\": \"group_name\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 2,\r",
											"                        \"status\": \"Reserved\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": \"group_name\"\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 3,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 4,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Merryweather\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 5,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 6,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 7,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 8,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Tinker Bell\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 9,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 10,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 11,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 12,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Wanda\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 13,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 14,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 15,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 16,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        ]\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/layout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"layout"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order Valid Customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"orders\": [\"Americano\", \"Dark Roast\", \"Latte\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/customers/id_1/orders",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Checkout",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Header response to return location of the bill\", function () {\r",
											"    customer_id = \"id_1\";\r",
											"    test = pm.response.headers.get(\"Location\") === (\"http://localhost:8181/customers/\" + customer_id+ \"/bill\");\r",
											"    pm.expect(test).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"customer_id\": \"id_1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/checkout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"checkout"
									]
								}
							},
							"response": []
						},
						{
							"name": "layout empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to be valid layout empty test\", function () {\r",
											"    let jsonValid = {\r",
											"            \"name\": \"Les 4-FÃ©es\",\r",
											"            \"cubes\": [\r",
											"            {\r",
											"                \"name\": \"Bloom\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 1,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 2,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 3,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 4,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Merryweather\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 5,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 6,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 7,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 8,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Tinker Bell\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 9,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 10,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 11,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 12,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            {\r",
											"                \"name\": \"Wanda\",\r",
											"                \"seats\": [\r",
											"                    {\r",
											"                        \"number\": 13,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 14,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 15,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    },\r",
											"                    {\r",
											"                        \"number\": 16,\r",
											"                        \"status\": \"Available\",\r",
											"                        \"customer_id\": null,\r",
											"                        \"group_name\": null\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"            ]\r",
											"        }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/layout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"layout"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Bill",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"function auCentiemeSuperieur(nombre){\r",
											"    return Math.ceil(100*nombre)/100\r",
											"}\r",
											"\r",
											"pm.test(\"Response to be the coresponding bill\", function () {\r",
											"    // Americano\t2.25$  / Dark Roast\t2.10$ / Latte : 2.95$\r",
											"\r",
											"    let subtotal = 2.25 + 2.10 + 2.95\r",
											"    let taxe_percentage = 6.25 / 100\r",
											"    let taxes = (subtotal * taxe_percentage)\r",
											"    let tip_percentage = 15 / 100\r",
											"    let tip = (subtotal) * tip_percentage\r",
											"    let total = subtotal + taxes + tip\r",
											"\r",
											"    let jsonValid = {\r",
											"        \"orders\": [\"Americano\", \"Dark Roast\", \"Latte\"],\r",
											"        \"subtotal\": subtotal,\r",
											"        \"taxes\": auCentiemeSuperieur(taxes) ,\r",
											"        \"tip\": auCentiemeSuperieur(tip),\r",
											"        \"total\": auCentiemeSuperieur(total)\r",
											"    }\r",
											"    const responseJson = pm.response.json();\r",
											"    const isEqual = _.isEqual(responseJson,jsonValid\r",
											"     );\r",
											"     console.log(\"expected\",jsonValid)\r",
											"     console.log(\"reality\",responseJson)\r",
											"\r",
											"     pm.expect(isEqual).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8181/customers/id_1/bill",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"customers",
										"id_1",
										"bill"
									]
								}
							},
							"response": []
						},
						{
							"name": "Restore base Config",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"group_reservation_method\": \"Default\",\r\n  \"organization_name\": \"Les 4-FÃ©es\",\r\n  \"cube_size\": 4,\r\n  \"country\": \"None\",\r\n  \"province\": \"\",\r\n  \"state\": \"\",\r\n  \"group_tip_rate\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8181/config",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8181",
									"path": [
										"config"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "nbCustomerAdded",
			"value": "0",
			"type": "string"
		}
	]
}